#! Generated by VisualDCT v2.6
#! DBDSTART
#! DBDEND


record(stringin, "$(DEVICE)FC_IDENTITY") {
  field(DESC, "Identification")
  field(DTYP, "stream")
  field(INP, "@agilent53210a.proto.db GET_IDN $(PORT)")
  field(PINI, YES)
}

record(bo, "$(DEVICE)FC_RESET") {
  field(DESC, "Reset command")
  field(DTYP, "stream")
  field(OUT, "@agilent53210a.proto.db RESET $(PORT)")
  field(FLNK, "$(DEVICE)FC_UPDATE")
}

record(stringin, "$(DEVICE)FC_ERROR") {
  field(DESC, "Read error queue")
  field(DTYP, "stream")
  field(INP, "@agilent53210a.proto.db GET_ERROR $(PORT)")
  field(PINI, YES)
}

# When this is set, updating all *GET_* after next frequency reading
record(bo, "$(DEVICE)FC_UPDATE") {
  field(DESC, "Set this to read all settings")
}

# No need for continuous updates, so trigger an update then disable
record(seq, "$(DEVICE)FC_UPDATE_SEQ") {
  field(DESC, "Start update")
  field(DISV, 0)
  field(SDIS, "$(DEVICE)FC_UPDATE")
  field(VAL, "1")
  field(DOL1, "1")
  field(LNK1, "$(DEVICE)FC_UPDATE_FAN PP")
  field(DLY2, "0.5")
  field(DOL2, "0")
  field(LNK2, "$(DEVICE)FC_UPDATE PP")
}

record(fanout, "$(DEVICE)FC_UPDATE_FAN") {
  field(DESC, "Update all settings")
  field(LNK1, "$(DEVICE)FC_GET_IMPEDANCE")
  field(LNK2, "$(DEVICE)FC_GET_TRIG_LEVEL")
  field(LNK3, "$(DEVICE)FC_GET_TRIG_PERCENT")
  field(LNK4, "$(DEVICE)FC_ERROR")
  field(LNK5, "$(DEVICE)FC_GET_COUPLING")
  field(LNK6, "$(DEVICE)FC_GET_NOISE_REJ")
  field(PINI, YES)
}

record(ai, "$(DEVICE)FREQ_RBCK_RAW") {
  field(DESC, "Measured frequency")
  field(SCAN, "$(SCAN)")
  field(DTYP, "stream")
  field(INP, "@agilent53210a.proto.db GET_FREQ $(PORT)")
  field(EGU, "Hz")
  field(PREC, "3")
  field(FLNK, "$(DEVICE)FC_UPDATE_SEQ")
  info(autosaveFields, "DESC EGU HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC")
}

record(calcout, "$(DEVICE)FREQ_RBCK_PROC_") {
  field(DESC, "Update only when readback is sensible")
  field(CALC, "A<1000000000")
  field(INPA, "$(DEVICE)FREQ_RBCK_RAW CP MS")
  field(OUT, "$(DEVICE)FREQ_RBCK PP MS")
  field(OOPT, "When Non-zero")
  field(DOPT, "Use OCAL")
  field(OCAL, "A")
  field(LOW, "0")
  field(LSV, "INVALID")
}

record(ai, "$(DEVICE)FREQ_RBCK") {
  field(DESC, "Measured frequency")
  field(EGU, "Hz")
  field(PREC, "3")
  info(autosaveFields, "DESC EGU HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC")
}

record(bi, "$(DEVICE)FC_GET_IMPEDANCE") {
  field(DESC, "Input Impedance")
  field(DTYP, "stream")
  field(INP, "@agilent53210a.proto.db GET_IMPEDANCE $(PORT)")
  field(ZNAM, "1M Ohm")
  field(ONAM, "50 Ohm")
  info(autosaveFields, "ZSV OSV")
}

record(bo, "$(DEVICE)FC_SET_IMPEDANCE") {
  field(DESC, "Input Impedance")
  field(DTYP, "stream")
  field(OUT, "@agilent53210a.proto.db SET_IMPEDANCE $(PORT)")
  field(ZNAM, "1M Ohm")
  field(ONAM, "50 Ohm")
  field(FLNK, "$(DEVICE)FC_GET_IMPEDANCE")
  info(autosaveFields, "VAL ZSV OSV")
}

record(ai, "$(DEVICE)FC_GET_TRIG_LEVEL") {
  field(DESC, "Trigger level")
  field(DTYP, "stream")
  field(INP, "@agilent53210a.proto.db GET_TRIG_LEVEL $(PORT)")
  field(EGU, "V")
  field(PREC, "3")
  info(autosaveFields, "DESC EGU HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC")
}

record(ao, "$(DEVICE)FC_SET_TRIG_LEVEL") {
  field(DESC, "Trigger level")
  field(DTYP, "stream")
  field(OUT, "@agilent53210a.proto.db SET_TRIG_LEVEL $(PORT)")
  field(EGU, "V")
  field(PREC, "3")
  field(FLNK, "$(DEVICE)FC_GET_TRIG_LEVEL")
  info(autosaveFields, "VAL DESC EGU HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC")
}

record(ai, "$(DEVICE)FC_GET_TRIG_PERCENT") {
  field(DESC, "Trigger percent")
  field(DTYP, "stream")
  field(INP, "@agilent53210a.proto.db GET_TRIG_PERCENT $(PORT)")
  field(EGU, "V")
  field(PREC, "3")
  info(autosaveFields, "DESC EGU HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC")
}

record(ao, "$(DEVICE)FC_SET_TRIG_PERCENT") {
  field(DESC, "Trigger percent")
  field(DTYP, "stream")
  field(OUT, "@agilent53210a.proto.db SET_TRIG_PERCENT $(PORT)")
  field(EGU, "V")
  field(PREC, "3")
  field(FLNK, "$(DEVICE)FC_GET_TRIG_PERCENT")
  info(autosaveFields, "VAL DESC EGU HHSV HIGH HIHI HSV LLSV LOLO LOW LSV PREC")
}

record(mbbi, "$(DEVICE)FC_GET_AUTO_LEVEL") {
  field(DESC, "Input AUTO_LEVEL")
  field(DTYP, "stream")
  field(INP, "@agilent53210a.proto.db GET_AUTO_LEVEL $(PORT)")
  field(ZRST, "OFF")
  field(ONST, "ON")
  field(TWST, "ONCE")
  field(PINI, YES)
	info(autosaveFields, "UNSV COSV ZRSV ONSV TWSV")
}

record(mbbo, "$(DEVICE)FC_SET_AUTO_LEVEL") {
  field(DESC, "Input AUTO_LEVEL")
  field(DTYP, "stream")
  field(OUT, "@agilent53210a.proto.db SET_AUTO_LEVEL $(PORT)")
  field(ZRST, "OFF")
  field(ONST, "ON")
  field(TWST, "ONCE")
  field(FLNK, "$(DEVICE)FC_GET_AUTO_LEVEL")
	info(autosaveFields, "VAL UNSV COSV ZRSV ONSV TWSV")
}

record(bi, "$(DEVICE)FC_GET_COUPLING") {
  field(DESC, "Input Coupling")
  field(DTYP, "stream")
  field(INP, "@agilent53210a.proto.db GET_COUPLING $(PORT)")
  field(ZNAM, "AC")
  field(ONAM, "DC")
  info(autosaveFields, "ZSV OSV")
}

record(bo, "$(DEVICE)FC_SET_COUPLING") {
  field(DESC, "Input Coupling")
  field(DTYP, "stream")
  field(OUT, "@agilent53210a.proto.db SET_COUPLING $(PORT)")
  field(ZNAM, "AC")
  field(ONAM, "DC")
  field(FLNK, "$(DEVICE)FC_GET_COUPLING")
  info(autosaveFields, "VAL ZSV OSV")
}

record(bi, "$(DEVICE)FC_GET_NOISE_REJ") {
  field(DESC, "Noise rejection")
  field(DTYP, "stream")
  field(INP, "@agilent53210a.proto.db GET_NOISE_REJ $(PORT)")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  info(autosaveFields, "ZSV OSV")
}

record(bo, "$(DEVICE)FC_SET_NOISE_REJ") {
  field(DESC, "Noise rejection")
  field(DTYP, "stream")
  field(OUT, "@agilent53210a.proto.db SET_NOISE_REJ $(PORT)")
  field(ZNAM, "OFF")
  field(ONAM, "ON")
  field(FLNK, "$(DEVICE)FC_GET_NOISE_REJ")
  info(autosaveFields, "VAL ZSV OSV")
}

#! Further lines contain data used by VisualDCT
#! View(0,0,1.0)
#! Record("$(DEVICE)IDENTITY",20,22,0,0,"$(DEVICE)IDENTITY")
#! Record("$(DEVICE)RESET",500,22,0,0,"$(DEVICE)RESET")
#! Record("$(DEVICE)FREQ_RBCK_RAW",80,200,0,0,"$(DEVICE)FREQ_RBCK_RAW")
#! Field("$(DEVICE)FREQ_RBCK_RAW.VAL",16777215,1,"$(DEVICE)FREQ_RBCK_RAW.VAL")
#! Record("$(DEVICE)FREQ_RBCK_PROC_",340,159,0,1,"$(DEVICE)FREQ_RBCK_PROC_")
#! Field("$(DEVICE)FREQ_RBCK_PROC_.INPA",16777215,0,"$(DEVICE)FREQ_RBCK_PROC_.INPA")
#! Link("$(DEVICE)FREQ_RBCK_PROC_.INPA","$(DEVICE)FREQ_RBCK_RAW.VAL")
#! Field("$(DEVICE)FREQ_RBCK_PROC_.OUT",16777215,1,"$(DEVICE)FREQ_RBCK_PROC_.OUT")
#! Link("$(DEVICE)FREQ_RBCK_PROC_.OUT","$(DEVICE)FREQ_RBCK.VAL")
#! Record("$(DEVICE)FREQ_RBCK",680,262,0,1,"$(DEVICE)FREQ_RBCK")
#! Field("$(DEVICE)FREQ_RBCK.VAL",16777215,0,"$(DEVICE)FREQ_RBCK.VAL")
